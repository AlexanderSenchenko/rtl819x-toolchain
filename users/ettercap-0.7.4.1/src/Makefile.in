# Makefile.in generated by automake 1.11.2 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# $Id: Makefile.am,v 1.85 2005/07/07 10:08:56 alor Exp $

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/Makefile.am.common
bin_PROGRAMS = ettercap$(EXEEXT)
@HAVE_DN_EXPAND_TRUE@am__append_1 = dissectors/ec_dns.c
@OPENSSL_TRUE@am__append_2 = dissectors/ec_ssh.c
@NCURSES_TRUE@am__append_3 = interfaces/curses/libec_curses.a 
@GTK_TRUE@am__append_4 = interfaces/gtk/libec_gtk.a
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__ettercap_SOURCES_DIST = ec_capture.c ec_checksum.c ec_conf.c \
	ec_connbuf.c ec_conntrack.c ec_debug.c ec_decode.c \
	ec_dispatcher.c ec_dissect.c ec_error.c ec_file.c ec_filter.c \
	ec_fingerprint.c ec_format.c ec_globals.c ec_hash.c ec_hook.c \
	ec_inet.c ec_inject.c ec_interfaces.c ec_log.c ec_main.c \
	ec_manuf.c ec_mitm.c ec_packet.c ec_parser.c ec_passive.c \
	ec_plugins.c ec_poll.c ec_profiles.c ec_resolv.c ec_scan.c \
	ec_send.c ec_services.c ec_session.c ec_signals.c ec_socket.c \
	ec_sniff.c ec_sniff_bridge.c ec_sniff_unified.c ec_sslwrap.c \
	ec_stats.c ec_streambuf.c ec_strings.c ec_threads.c ec_ui.c \
	ec_update.c mitm/ec_arp_poisoning.c mitm/ec_dhcp_spoofing.c \
	mitm/ec_icmp_redirect.c mitm/ec_port_stealing.c \
	protocols/ec_arp.c protocols/ec_eth.c protocols/ec_fddi.c \
	protocols/ec_cooked.c protocols/ec_gre.c protocols/ec_icmp.c \
	protocols/ec_ip.c protocols/ec_ip6.c protocols/ec_ppp.c \
	protocols/ec_prism.c protocols/ec_rawip.c protocols/ec_tcp.c \
	protocols/ec_tr.c protocols/ec_vlan.c protocols/ec_udp.c \
	protocols/ec_wifi.c dissectors/ec_bgp.c dissectors/ec_cvs.c \
	dissectors/ec_dhcp.c dissectors/ec_dns.c dissectors/ec_ftp.c \
	dissectors/ec_http.c dissectors/ec_imap.c dissectors/ec_icq.c \
	dissectors/ec_irc.c dissectors/ec_ldap.c \
	dissectors/ec_mountd.c dissectors/ec_msn.c \
	dissectors/ec_mysql.c dissectors/ec_napster.c \
	dissectors/ec_nntp.c dissectors/ec_ospf.c dissectors/ec_pop.c \
	dissectors/ec_portmap.c dissectors/ec_radius.c \
	dissectors/ec_rcon.c dissectors/ec_rip.c \
	dissectors/ec_rlogin.c dissectors/ec_smb.c \
	dissectors/ec_smtp.c dissectors/ec_snmp.c dissectors/ec_ssh.c \
	dissectors/ec_socks.c dissectors/ec_telnet.c \
	dissectors/ec_vnc.c dissectors/ec_vrrp.c dissectors/ec_x11.c \
	dissectors/ec_ymsg.c
am__dirstamp = $(am__leading_dot)dirstamp
@HAVE_DN_EXPAND_TRUE@am__objects_1 =  \
@HAVE_DN_EXPAND_TRUE@	dissectors/ettercap-ec_dns.$(OBJEXT)
@OPENSSL_TRUE@am__objects_2 = dissectors/ettercap-ec_ssh.$(OBJEXT)
am_ettercap_OBJECTS = ettercap-ec_capture.$(OBJEXT) \
	ettercap-ec_checksum.$(OBJEXT) ettercap-ec_conf.$(OBJEXT) \
	ettercap-ec_connbuf.$(OBJEXT) ettercap-ec_conntrack.$(OBJEXT) \
	ettercap-ec_debug.$(OBJEXT) ettercap-ec_decode.$(OBJEXT) \
	ettercap-ec_dispatcher.$(OBJEXT) ettercap-ec_dissect.$(OBJEXT) \
	ettercap-ec_error.$(OBJEXT) ettercap-ec_file.$(OBJEXT) \
	ettercap-ec_filter.$(OBJEXT) ettercap-ec_fingerprint.$(OBJEXT) \
	ettercap-ec_format.$(OBJEXT) ettercap-ec_globals.$(OBJEXT) \
	ettercap-ec_hash.$(OBJEXT) ettercap-ec_hook.$(OBJEXT) \
	ettercap-ec_inet.$(OBJEXT) ettercap-ec_inject.$(OBJEXT) \
	ettercap-ec_interfaces.$(OBJEXT) ettercap-ec_log.$(OBJEXT) \
	ettercap-ec_main.$(OBJEXT) ettercap-ec_manuf.$(OBJEXT) \
	ettercap-ec_mitm.$(OBJEXT) ettercap-ec_packet.$(OBJEXT) \
	ettercap-ec_parser.$(OBJEXT) ettercap-ec_passive.$(OBJEXT) \
	ettercap-ec_plugins.$(OBJEXT) ettercap-ec_poll.$(OBJEXT) \
	ettercap-ec_profiles.$(OBJEXT) ettercap-ec_resolv.$(OBJEXT) \
	ettercap-ec_scan.$(OBJEXT) ettercap-ec_send.$(OBJEXT) \
	ettercap-ec_services.$(OBJEXT) ettercap-ec_session.$(OBJEXT) \
	ettercap-ec_signals.$(OBJEXT) ettercap-ec_socket.$(OBJEXT) \
	ettercap-ec_sniff.$(OBJEXT) ettercap-ec_sniff_bridge.$(OBJEXT) \
	ettercap-ec_sniff_unified.$(OBJEXT) \
	ettercap-ec_sslwrap.$(OBJEXT) ettercap-ec_stats.$(OBJEXT) \
	ettercap-ec_streambuf.$(OBJEXT) ettercap-ec_strings.$(OBJEXT) \
	ettercap-ec_threads.$(OBJEXT) ettercap-ec_ui.$(OBJEXT) \
	ettercap-ec_update.$(OBJEXT) \
	mitm/ettercap-ec_arp_poisoning.$(OBJEXT) \
	mitm/ettercap-ec_dhcp_spoofing.$(OBJEXT) \
	mitm/ettercap-ec_icmp_redirect.$(OBJEXT) \
	mitm/ettercap-ec_port_stealing.$(OBJEXT) \
	protocols/ettercap-ec_arp.$(OBJEXT) \
	protocols/ettercap-ec_eth.$(OBJEXT) \
	protocols/ettercap-ec_fddi.$(OBJEXT) \
	protocols/ettercap-ec_cooked.$(OBJEXT) \
	protocols/ettercap-ec_gre.$(OBJEXT) \
	protocols/ettercap-ec_icmp.$(OBJEXT) \
	protocols/ettercap-ec_ip.$(OBJEXT) \
	protocols/ettercap-ec_ip6.$(OBJEXT) \
	protocols/ettercap-ec_ppp.$(OBJEXT) \
	protocols/ettercap-ec_prism.$(OBJEXT) \
	protocols/ettercap-ec_rawip.$(OBJEXT) \
	protocols/ettercap-ec_tcp.$(OBJEXT) \
	protocols/ettercap-ec_tr.$(OBJEXT) \
	protocols/ettercap-ec_vlan.$(OBJEXT) \
	protocols/ettercap-ec_udp.$(OBJEXT) \
	protocols/ettercap-ec_wifi.$(OBJEXT) \
	dissectors/ettercap-ec_bgp.$(OBJEXT) \
	dissectors/ettercap-ec_cvs.$(OBJEXT) \
	dissectors/ettercap-ec_dhcp.$(OBJEXT) $(am__objects_1) \
	dissectors/ettercap-ec_ftp.$(OBJEXT) \
	dissectors/ettercap-ec_http.$(OBJEXT) \
	dissectors/ettercap-ec_imap.$(OBJEXT) \
	dissectors/ettercap-ec_icq.$(OBJEXT) \
	dissectors/ettercap-ec_irc.$(OBJEXT) \
	dissectors/ettercap-ec_ldap.$(OBJEXT) \
	dissectors/ettercap-ec_mountd.$(OBJEXT) \
	dissectors/ettercap-ec_msn.$(OBJEXT) \
	dissectors/ettercap-ec_mysql.$(OBJEXT) \
	dissectors/ettercap-ec_napster.$(OBJEXT) \
	dissectors/ettercap-ec_nntp.$(OBJEXT) \
	dissectors/ettercap-ec_ospf.$(OBJEXT) \
	dissectors/ettercap-ec_pop.$(OBJEXT) \
	dissectors/ettercap-ec_portmap.$(OBJEXT) \
	dissectors/ettercap-ec_radius.$(OBJEXT) \
	dissectors/ettercap-ec_rcon.$(OBJEXT) \
	dissectors/ettercap-ec_rip.$(OBJEXT) \
	dissectors/ettercap-ec_rlogin.$(OBJEXT) \
	dissectors/ettercap-ec_smb.$(OBJEXT) \
	dissectors/ettercap-ec_smtp.$(OBJEXT) \
	dissectors/ettercap-ec_snmp.$(OBJEXT) $(am__objects_2) \
	dissectors/ettercap-ec_socks.$(OBJEXT) \
	dissectors/ettercap-ec_telnet.$(OBJEXT) \
	dissectors/ettercap-ec_vnc.$(OBJEXT) \
	dissectors/ettercap-ec_vrrp.$(OBJEXT) \
	dissectors/ettercap-ec_x11.$(OBJEXT) \
	dissectors/ettercap-ec_ymsg.$(OBJEXT)
ettercap_OBJECTS = $(am_ettercap_OBJECTS)
LIBOBJDIR = ../src/missing/
ettercap_DEPENDENCIES = @LIBOBJS@ os/libec_os.a \
	interfaces/daemon/libec_daemon.a interfaces/text/libec_text.a \
	$(am__append_3) $(am__append_4)
ettercap_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(ettercap_CFLAGS) $(CFLAGS) \
	$(ettercap_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/include
depcomp =
am__depfiles_maybe =
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(ettercap_SOURCES)
DIST_SOURCES = $(am__ettercap_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
ARGZ_H = @ARGZ_H@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
EB = @EB@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EC_CFLAGS = @EC_CFLAGS@
EC_LIBS = @EC_LIBS@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
GTK_CFLAGS = @GTK_CFLAGS@
GTK_LIBS = @GTK_LIBS@
ICONVLIB = @ICONVLIB@
INCLTDL = @INCLTDL@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBADD_DL = @LIBADD_DL@
LIBADD_DLD_LINK = @LIBADD_DLD_LINK@
LIBADD_DLOPEN = @LIBADD_DLOPEN@
LIBADD_SHL_LOAD = @LIBADD_SHL_LOAD@
LIBLTDL = @LIBLTDL@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LNETINC = @LNETINC@
LNETLIB = @LNETLIB@
LN_S = @LN_S@
LTDLDEPS = @LTDLDEPS@
LTDLINCL = @LTDLINCL@
LTDLOPEN = @LTDLOPEN@
LTLIBOBJS = @LTLIBOBJS@
LT_CONFIG_H = @LT_CONFIG_H@
LT_DLLOADERS = @LT_DLLOADERS@
LT_DLPREOPEN = @LT_DLPREOPEN@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NCURSINC = @NCURSINC@
NCURSLIB = @NCURSLIB@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PCAPINC = @PCAPINC@
PCAPLIB = @PCAPLIB@
PCREINC = @PCREINC@
PCRELIB = @PCRELIB@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
PL_CFLAGS = @PL_CFLAGS@
PL_LDFLAGS = @PL_LDFLAGS@
RANLIB = @RANLIB@
SB = @SB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SSLINC = @SSLINC@
SSLLIB = @SSLLIB@
STRIP = @STRIP@
VERSION = @VERSION@
YACC = @YACC@
YFLAGS = @YFLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
ltdl_LIBOBJS = @ltdl_LIBOBJS@
ltdl_LTLIBOBJS = @ltdl_LTLIBOBJS@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sys_symbol_underscore = @sys_symbol_underscore@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AUTOMAKE_OPTIONS = foreign no-dependencies subdir-objects
AM_CPPFLAGS = -DINSTALL_DATADIR='"$(datadir)"' -DINSTALL_BINDIR='"$(bindir)"' -DINSTALL_EXECPREFIX='"$(exec_prefix)"' -DINSTALL_LIBDIR='"$(libdir)"' -DINSTALL_PREFIX='"$(prefix)"' -DINSTALL_SYSCONFDIR='"$(sysconfdir)"' @CPPFLAGS@
DISTCLEANFILES = *~
SUBDIRS = os interfaces
EXTRA_DIST = ettercap.rc

#
# these cannot be compiled as a lib because
# they use __init functions
#
ettercap_SOURCES = ec_capture.c ec_checksum.c ec_conf.c ec_connbuf.c \
	ec_conntrack.c ec_debug.c ec_decode.c ec_dispatcher.c \
	ec_dissect.c ec_error.c ec_file.c ec_filter.c ec_fingerprint.c \
	ec_format.c ec_globals.c ec_hash.c ec_hook.c ec_inet.c \
	ec_inject.c ec_interfaces.c ec_log.c ec_main.c ec_manuf.c \
	ec_mitm.c ec_packet.c ec_parser.c ec_passive.c ec_plugins.c \
	ec_poll.c ec_profiles.c ec_resolv.c ec_scan.c ec_send.c \
	ec_services.c ec_session.c ec_signals.c ec_socket.c ec_sniff.c \
	ec_sniff_bridge.c ec_sniff_unified.c ec_sslwrap.c ec_stats.c \
	ec_streambuf.c ec_strings.c ec_threads.c ec_ui.c ec_update.c \
	mitm/ec_arp_poisoning.c mitm/ec_dhcp_spoofing.c \
	mitm/ec_icmp_redirect.c mitm/ec_port_stealing.c \
	protocols/ec_arp.c protocols/ec_eth.c protocols/ec_fddi.c \
	protocols/ec_cooked.c protocols/ec_gre.c protocols/ec_icmp.c \
	protocols/ec_ip.c protocols/ec_ip6.c protocols/ec_ppp.c \
	protocols/ec_prism.c protocols/ec_rawip.c protocols/ec_tcp.c \
	protocols/ec_tr.c protocols/ec_vlan.c protocols/ec_udp.c \
	protocols/ec_wifi.c dissectors/ec_bgp.c dissectors/ec_cvs.c \
	dissectors/ec_dhcp.c $(am__append_1) dissectors/ec_ftp.c \
	dissectors/ec_http.c dissectors/ec_imap.c dissectors/ec_icq.c \
	dissectors/ec_irc.c dissectors/ec_ldap.c \
	dissectors/ec_mountd.c dissectors/ec_msn.c \
	dissectors/ec_mysql.c dissectors/ec_napster.c \
	dissectors/ec_nntp.c dissectors/ec_ospf.c dissectors/ec_pop.c \
	dissectors/ec_portmap.c dissectors/ec_radius.c \
	dissectors/ec_rcon.c dissectors/ec_rip.c \
	dissectors/ec_rlogin.c dissectors/ec_smb.c \
	dissectors/ec_smtp.c dissectors/ec_snmp.c $(am__append_2) \
	dissectors/ec_socks.c dissectors/ec_telnet.c \
	dissectors/ec_vnc.c dissectors/ec_vrrp.c dissectors/ec_x11.c \
	dissectors/ec_ymsg.c
ettercap_CFLAGS = @EC_CFLAGS@
ettercap_LDADD = @LIBOBJS@ os/libec_os.a \
	interfaces/daemon/libec_daemon.a interfaces/text/libec_text.a \
	$(am__append_3) $(am__append_4)
ettercap_LDFLAGS = -export-dynamic @EC_LIBS@ 
CLEANFILES = *.log *.out core* missing/*.o *~
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(top_srcdir)/Makefile.am.common $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
mitm/$(am__dirstamp):
	@$(MKDIR_P) mitm
	@: > mitm/$(am__dirstamp)
mitm/ettercap-ec_arp_poisoning.$(OBJEXT): mitm/$(am__dirstamp)
mitm/ettercap-ec_dhcp_spoofing.$(OBJEXT): mitm/$(am__dirstamp)
mitm/ettercap-ec_icmp_redirect.$(OBJEXT): mitm/$(am__dirstamp)
mitm/ettercap-ec_port_stealing.$(OBJEXT): mitm/$(am__dirstamp)
protocols/$(am__dirstamp):
	@$(MKDIR_P) protocols
	@: > protocols/$(am__dirstamp)
protocols/ettercap-ec_arp.$(OBJEXT): protocols/$(am__dirstamp)
protocols/ettercap-ec_eth.$(OBJEXT): protocols/$(am__dirstamp)
protocols/ettercap-ec_fddi.$(OBJEXT): protocols/$(am__dirstamp)
protocols/ettercap-ec_cooked.$(OBJEXT): protocols/$(am__dirstamp)
protocols/ettercap-ec_gre.$(OBJEXT): protocols/$(am__dirstamp)
protocols/ettercap-ec_icmp.$(OBJEXT): protocols/$(am__dirstamp)
protocols/ettercap-ec_ip.$(OBJEXT): protocols/$(am__dirstamp)
protocols/ettercap-ec_ip6.$(OBJEXT): protocols/$(am__dirstamp)
protocols/ettercap-ec_ppp.$(OBJEXT): protocols/$(am__dirstamp)
protocols/ettercap-ec_prism.$(OBJEXT): protocols/$(am__dirstamp)
protocols/ettercap-ec_rawip.$(OBJEXT): protocols/$(am__dirstamp)
protocols/ettercap-ec_tcp.$(OBJEXT): protocols/$(am__dirstamp)
protocols/ettercap-ec_tr.$(OBJEXT): protocols/$(am__dirstamp)
protocols/ettercap-ec_vlan.$(OBJEXT): protocols/$(am__dirstamp)
protocols/ettercap-ec_udp.$(OBJEXT): protocols/$(am__dirstamp)
protocols/ettercap-ec_wifi.$(OBJEXT): protocols/$(am__dirstamp)
dissectors/$(am__dirstamp):
	@$(MKDIR_P) dissectors
	@: > dissectors/$(am__dirstamp)
dissectors/ettercap-ec_bgp.$(OBJEXT): dissectors/$(am__dirstamp)
dissectors/ettercap-ec_cvs.$(OBJEXT): dissectors/$(am__dirstamp)
dissectors/ettercap-ec_dhcp.$(OBJEXT): dissectors/$(am__dirstamp)
dissectors/ettercap-ec_dns.$(OBJEXT): dissectors/$(am__dirstamp)
dissectors/ettercap-ec_ftp.$(OBJEXT): dissectors/$(am__dirstamp)
dissectors/ettercap-ec_http.$(OBJEXT): dissectors/$(am__dirstamp)
dissectors/ettercap-ec_imap.$(OBJEXT): dissectors/$(am__dirstamp)
dissectors/ettercap-ec_icq.$(OBJEXT): dissectors/$(am__dirstamp)
dissectors/ettercap-ec_irc.$(OBJEXT): dissectors/$(am__dirstamp)
dissectors/ettercap-ec_ldap.$(OBJEXT): dissectors/$(am__dirstamp)
dissectors/ettercap-ec_mountd.$(OBJEXT): dissectors/$(am__dirstamp)
dissectors/ettercap-ec_msn.$(OBJEXT): dissectors/$(am__dirstamp)
dissectors/ettercap-ec_mysql.$(OBJEXT): dissectors/$(am__dirstamp)
dissectors/ettercap-ec_napster.$(OBJEXT): dissectors/$(am__dirstamp)
dissectors/ettercap-ec_nntp.$(OBJEXT): dissectors/$(am__dirstamp)
dissectors/ettercap-ec_ospf.$(OBJEXT): dissectors/$(am__dirstamp)
dissectors/ettercap-ec_pop.$(OBJEXT): dissectors/$(am__dirstamp)
dissectors/ettercap-ec_portmap.$(OBJEXT): dissectors/$(am__dirstamp)
dissectors/ettercap-ec_radius.$(OBJEXT): dissectors/$(am__dirstamp)
dissectors/ettercap-ec_rcon.$(OBJEXT): dissectors/$(am__dirstamp)
dissectors/ettercap-ec_rip.$(OBJEXT): dissectors/$(am__dirstamp)
dissectors/ettercap-ec_rlogin.$(OBJEXT): dissectors/$(am__dirstamp)
dissectors/ettercap-ec_smb.$(OBJEXT): dissectors/$(am__dirstamp)
dissectors/ettercap-ec_smtp.$(OBJEXT): dissectors/$(am__dirstamp)
dissectors/ettercap-ec_snmp.$(OBJEXT): dissectors/$(am__dirstamp)
dissectors/ettercap-ec_ssh.$(OBJEXT): dissectors/$(am__dirstamp)
dissectors/ettercap-ec_socks.$(OBJEXT): dissectors/$(am__dirstamp)
dissectors/ettercap-ec_telnet.$(OBJEXT): dissectors/$(am__dirstamp)
dissectors/ettercap-ec_vnc.$(OBJEXT): dissectors/$(am__dirstamp)
dissectors/ettercap-ec_vrrp.$(OBJEXT): dissectors/$(am__dirstamp)
dissectors/ettercap-ec_x11.$(OBJEXT): dissectors/$(am__dirstamp)
dissectors/ettercap-ec_ymsg.$(OBJEXT): dissectors/$(am__dirstamp)
ettercap$(EXEEXT): $(ettercap_OBJECTS) $(ettercap_DEPENDENCIES) 
	@rm -f ettercap$(EXEEXT)
	$(ettercap_LINK) $(ettercap_OBJECTS) $(ettercap_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f dissectors/ettercap-ec_bgp.$(OBJEXT)
	-rm -f dissectors/ettercap-ec_cvs.$(OBJEXT)
	-rm -f dissectors/ettercap-ec_dhcp.$(OBJEXT)
	-rm -f dissectors/ettercap-ec_dns.$(OBJEXT)
	-rm -f dissectors/ettercap-ec_ftp.$(OBJEXT)
	-rm -f dissectors/ettercap-ec_http.$(OBJEXT)
	-rm -f dissectors/ettercap-ec_icq.$(OBJEXT)
	-rm -f dissectors/ettercap-ec_imap.$(OBJEXT)
	-rm -f dissectors/ettercap-ec_irc.$(OBJEXT)
	-rm -f dissectors/ettercap-ec_ldap.$(OBJEXT)
	-rm -f dissectors/ettercap-ec_mountd.$(OBJEXT)
	-rm -f dissectors/ettercap-ec_msn.$(OBJEXT)
	-rm -f dissectors/ettercap-ec_mysql.$(OBJEXT)
	-rm -f dissectors/ettercap-ec_napster.$(OBJEXT)
	-rm -f dissectors/ettercap-ec_nntp.$(OBJEXT)
	-rm -f dissectors/ettercap-ec_ospf.$(OBJEXT)
	-rm -f dissectors/ettercap-ec_pop.$(OBJEXT)
	-rm -f dissectors/ettercap-ec_portmap.$(OBJEXT)
	-rm -f dissectors/ettercap-ec_radius.$(OBJEXT)
	-rm -f dissectors/ettercap-ec_rcon.$(OBJEXT)
	-rm -f dissectors/ettercap-ec_rip.$(OBJEXT)
	-rm -f dissectors/ettercap-ec_rlogin.$(OBJEXT)
	-rm -f dissectors/ettercap-ec_smb.$(OBJEXT)
	-rm -f dissectors/ettercap-ec_smtp.$(OBJEXT)
	-rm -f dissectors/ettercap-ec_snmp.$(OBJEXT)
	-rm -f dissectors/ettercap-ec_socks.$(OBJEXT)
	-rm -f dissectors/ettercap-ec_ssh.$(OBJEXT)
	-rm -f dissectors/ettercap-ec_telnet.$(OBJEXT)
	-rm -f dissectors/ettercap-ec_vnc.$(OBJEXT)
	-rm -f dissectors/ettercap-ec_vrrp.$(OBJEXT)
	-rm -f dissectors/ettercap-ec_x11.$(OBJEXT)
	-rm -f dissectors/ettercap-ec_ymsg.$(OBJEXT)
	-rm -f mitm/ettercap-ec_arp_poisoning.$(OBJEXT)
	-rm -f mitm/ettercap-ec_dhcp_spoofing.$(OBJEXT)
	-rm -f mitm/ettercap-ec_icmp_redirect.$(OBJEXT)
	-rm -f mitm/ettercap-ec_port_stealing.$(OBJEXT)
	-rm -f protocols/ettercap-ec_arp.$(OBJEXT)
	-rm -f protocols/ettercap-ec_cooked.$(OBJEXT)
	-rm -f protocols/ettercap-ec_eth.$(OBJEXT)
	-rm -f protocols/ettercap-ec_fddi.$(OBJEXT)
	-rm -f protocols/ettercap-ec_gre.$(OBJEXT)
	-rm -f protocols/ettercap-ec_icmp.$(OBJEXT)
	-rm -f protocols/ettercap-ec_ip.$(OBJEXT)
	-rm -f protocols/ettercap-ec_ip6.$(OBJEXT)
	-rm -f protocols/ettercap-ec_ppp.$(OBJEXT)
	-rm -f protocols/ettercap-ec_prism.$(OBJEXT)
	-rm -f protocols/ettercap-ec_rawip.$(OBJEXT)
	-rm -f protocols/ettercap-ec_tcp.$(OBJEXT)
	-rm -f protocols/ettercap-ec_tr.$(OBJEXT)
	-rm -f protocols/ettercap-ec_udp.$(OBJEXT)
	-rm -f protocols/ettercap-ec_vlan.$(OBJEXT)
	-rm -f protocols/ettercap-ec_wifi.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.c.o:
	$(COMPILE) -c -o $@ $<

.c.obj:
	$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -c -o $@ $<

ettercap-ec_capture.o: ec_capture.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_capture.o `test -f 'ec_capture.c' || echo '$(srcdir)/'`ec_capture.c

ettercap-ec_capture.obj: ec_capture.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_capture.obj `if test -f 'ec_capture.c'; then $(CYGPATH_W) 'ec_capture.c'; else $(CYGPATH_W) '$(srcdir)/ec_capture.c'; fi`

ettercap-ec_checksum.o: ec_checksum.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_checksum.o `test -f 'ec_checksum.c' || echo '$(srcdir)/'`ec_checksum.c

ettercap-ec_checksum.obj: ec_checksum.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_checksum.obj `if test -f 'ec_checksum.c'; then $(CYGPATH_W) 'ec_checksum.c'; else $(CYGPATH_W) '$(srcdir)/ec_checksum.c'; fi`

ettercap-ec_conf.o: ec_conf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_conf.o `test -f 'ec_conf.c' || echo '$(srcdir)/'`ec_conf.c

ettercap-ec_conf.obj: ec_conf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_conf.obj `if test -f 'ec_conf.c'; then $(CYGPATH_W) 'ec_conf.c'; else $(CYGPATH_W) '$(srcdir)/ec_conf.c'; fi`

ettercap-ec_connbuf.o: ec_connbuf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_connbuf.o `test -f 'ec_connbuf.c' || echo '$(srcdir)/'`ec_connbuf.c

ettercap-ec_connbuf.obj: ec_connbuf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_connbuf.obj `if test -f 'ec_connbuf.c'; then $(CYGPATH_W) 'ec_connbuf.c'; else $(CYGPATH_W) '$(srcdir)/ec_connbuf.c'; fi`

ettercap-ec_conntrack.o: ec_conntrack.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_conntrack.o `test -f 'ec_conntrack.c' || echo '$(srcdir)/'`ec_conntrack.c

ettercap-ec_conntrack.obj: ec_conntrack.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_conntrack.obj `if test -f 'ec_conntrack.c'; then $(CYGPATH_W) 'ec_conntrack.c'; else $(CYGPATH_W) '$(srcdir)/ec_conntrack.c'; fi`

ettercap-ec_debug.o: ec_debug.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_debug.o `test -f 'ec_debug.c' || echo '$(srcdir)/'`ec_debug.c

ettercap-ec_debug.obj: ec_debug.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_debug.obj `if test -f 'ec_debug.c'; then $(CYGPATH_W) 'ec_debug.c'; else $(CYGPATH_W) '$(srcdir)/ec_debug.c'; fi`

ettercap-ec_decode.o: ec_decode.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_decode.o `test -f 'ec_decode.c' || echo '$(srcdir)/'`ec_decode.c

ettercap-ec_decode.obj: ec_decode.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_decode.obj `if test -f 'ec_decode.c'; then $(CYGPATH_W) 'ec_decode.c'; else $(CYGPATH_W) '$(srcdir)/ec_decode.c'; fi`

ettercap-ec_dispatcher.o: ec_dispatcher.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_dispatcher.o `test -f 'ec_dispatcher.c' || echo '$(srcdir)/'`ec_dispatcher.c

ettercap-ec_dispatcher.obj: ec_dispatcher.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_dispatcher.obj `if test -f 'ec_dispatcher.c'; then $(CYGPATH_W) 'ec_dispatcher.c'; else $(CYGPATH_W) '$(srcdir)/ec_dispatcher.c'; fi`

ettercap-ec_dissect.o: ec_dissect.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_dissect.o `test -f 'ec_dissect.c' || echo '$(srcdir)/'`ec_dissect.c

ettercap-ec_dissect.obj: ec_dissect.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_dissect.obj `if test -f 'ec_dissect.c'; then $(CYGPATH_W) 'ec_dissect.c'; else $(CYGPATH_W) '$(srcdir)/ec_dissect.c'; fi`

ettercap-ec_error.o: ec_error.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_error.o `test -f 'ec_error.c' || echo '$(srcdir)/'`ec_error.c

ettercap-ec_error.obj: ec_error.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_error.obj `if test -f 'ec_error.c'; then $(CYGPATH_W) 'ec_error.c'; else $(CYGPATH_W) '$(srcdir)/ec_error.c'; fi`

ettercap-ec_file.o: ec_file.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_file.o `test -f 'ec_file.c' || echo '$(srcdir)/'`ec_file.c

ettercap-ec_file.obj: ec_file.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_file.obj `if test -f 'ec_file.c'; then $(CYGPATH_W) 'ec_file.c'; else $(CYGPATH_W) '$(srcdir)/ec_file.c'; fi`

ettercap-ec_filter.o: ec_filter.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_filter.o `test -f 'ec_filter.c' || echo '$(srcdir)/'`ec_filter.c

ettercap-ec_filter.obj: ec_filter.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_filter.obj `if test -f 'ec_filter.c'; then $(CYGPATH_W) 'ec_filter.c'; else $(CYGPATH_W) '$(srcdir)/ec_filter.c'; fi`

ettercap-ec_fingerprint.o: ec_fingerprint.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_fingerprint.o `test -f 'ec_fingerprint.c' || echo '$(srcdir)/'`ec_fingerprint.c

ettercap-ec_fingerprint.obj: ec_fingerprint.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_fingerprint.obj `if test -f 'ec_fingerprint.c'; then $(CYGPATH_W) 'ec_fingerprint.c'; else $(CYGPATH_W) '$(srcdir)/ec_fingerprint.c'; fi`

ettercap-ec_format.o: ec_format.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_format.o `test -f 'ec_format.c' || echo '$(srcdir)/'`ec_format.c

ettercap-ec_format.obj: ec_format.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_format.obj `if test -f 'ec_format.c'; then $(CYGPATH_W) 'ec_format.c'; else $(CYGPATH_W) '$(srcdir)/ec_format.c'; fi`

ettercap-ec_globals.o: ec_globals.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_globals.o `test -f 'ec_globals.c' || echo '$(srcdir)/'`ec_globals.c

ettercap-ec_globals.obj: ec_globals.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_globals.obj `if test -f 'ec_globals.c'; then $(CYGPATH_W) 'ec_globals.c'; else $(CYGPATH_W) '$(srcdir)/ec_globals.c'; fi`

ettercap-ec_hash.o: ec_hash.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_hash.o `test -f 'ec_hash.c' || echo '$(srcdir)/'`ec_hash.c

ettercap-ec_hash.obj: ec_hash.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_hash.obj `if test -f 'ec_hash.c'; then $(CYGPATH_W) 'ec_hash.c'; else $(CYGPATH_W) '$(srcdir)/ec_hash.c'; fi`

ettercap-ec_hook.o: ec_hook.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_hook.o `test -f 'ec_hook.c' || echo '$(srcdir)/'`ec_hook.c

ettercap-ec_hook.obj: ec_hook.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_hook.obj `if test -f 'ec_hook.c'; then $(CYGPATH_W) 'ec_hook.c'; else $(CYGPATH_W) '$(srcdir)/ec_hook.c'; fi`

ettercap-ec_inet.o: ec_inet.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_inet.o `test -f 'ec_inet.c' || echo '$(srcdir)/'`ec_inet.c

ettercap-ec_inet.obj: ec_inet.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_inet.obj `if test -f 'ec_inet.c'; then $(CYGPATH_W) 'ec_inet.c'; else $(CYGPATH_W) '$(srcdir)/ec_inet.c'; fi`

ettercap-ec_inject.o: ec_inject.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_inject.o `test -f 'ec_inject.c' || echo '$(srcdir)/'`ec_inject.c

ettercap-ec_inject.obj: ec_inject.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_inject.obj `if test -f 'ec_inject.c'; then $(CYGPATH_W) 'ec_inject.c'; else $(CYGPATH_W) '$(srcdir)/ec_inject.c'; fi`

ettercap-ec_interfaces.o: ec_interfaces.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_interfaces.o `test -f 'ec_interfaces.c' || echo '$(srcdir)/'`ec_interfaces.c

ettercap-ec_interfaces.obj: ec_interfaces.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_interfaces.obj `if test -f 'ec_interfaces.c'; then $(CYGPATH_W) 'ec_interfaces.c'; else $(CYGPATH_W) '$(srcdir)/ec_interfaces.c'; fi`

ettercap-ec_log.o: ec_log.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_log.o `test -f 'ec_log.c' || echo '$(srcdir)/'`ec_log.c

ettercap-ec_log.obj: ec_log.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_log.obj `if test -f 'ec_log.c'; then $(CYGPATH_W) 'ec_log.c'; else $(CYGPATH_W) '$(srcdir)/ec_log.c'; fi`

ettercap-ec_main.o: ec_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_main.o `test -f 'ec_main.c' || echo '$(srcdir)/'`ec_main.c

ettercap-ec_main.obj: ec_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_main.obj `if test -f 'ec_main.c'; then $(CYGPATH_W) 'ec_main.c'; else $(CYGPATH_W) '$(srcdir)/ec_main.c'; fi`

ettercap-ec_manuf.o: ec_manuf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_manuf.o `test -f 'ec_manuf.c' || echo '$(srcdir)/'`ec_manuf.c

ettercap-ec_manuf.obj: ec_manuf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_manuf.obj `if test -f 'ec_manuf.c'; then $(CYGPATH_W) 'ec_manuf.c'; else $(CYGPATH_W) '$(srcdir)/ec_manuf.c'; fi`

ettercap-ec_mitm.o: ec_mitm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_mitm.o `test -f 'ec_mitm.c' || echo '$(srcdir)/'`ec_mitm.c

ettercap-ec_mitm.obj: ec_mitm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_mitm.obj `if test -f 'ec_mitm.c'; then $(CYGPATH_W) 'ec_mitm.c'; else $(CYGPATH_W) '$(srcdir)/ec_mitm.c'; fi`

ettercap-ec_packet.o: ec_packet.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_packet.o `test -f 'ec_packet.c' || echo '$(srcdir)/'`ec_packet.c

ettercap-ec_packet.obj: ec_packet.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_packet.obj `if test -f 'ec_packet.c'; then $(CYGPATH_W) 'ec_packet.c'; else $(CYGPATH_W) '$(srcdir)/ec_packet.c'; fi`

ettercap-ec_parser.o: ec_parser.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_parser.o `test -f 'ec_parser.c' || echo '$(srcdir)/'`ec_parser.c

ettercap-ec_parser.obj: ec_parser.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_parser.obj `if test -f 'ec_parser.c'; then $(CYGPATH_W) 'ec_parser.c'; else $(CYGPATH_W) '$(srcdir)/ec_parser.c'; fi`

ettercap-ec_passive.o: ec_passive.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_passive.o `test -f 'ec_passive.c' || echo '$(srcdir)/'`ec_passive.c

ettercap-ec_passive.obj: ec_passive.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_passive.obj `if test -f 'ec_passive.c'; then $(CYGPATH_W) 'ec_passive.c'; else $(CYGPATH_W) '$(srcdir)/ec_passive.c'; fi`

ettercap-ec_plugins.o: ec_plugins.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_plugins.o `test -f 'ec_plugins.c' || echo '$(srcdir)/'`ec_plugins.c

ettercap-ec_plugins.obj: ec_plugins.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_plugins.obj `if test -f 'ec_plugins.c'; then $(CYGPATH_W) 'ec_plugins.c'; else $(CYGPATH_W) '$(srcdir)/ec_plugins.c'; fi`

ettercap-ec_poll.o: ec_poll.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_poll.o `test -f 'ec_poll.c' || echo '$(srcdir)/'`ec_poll.c

ettercap-ec_poll.obj: ec_poll.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_poll.obj `if test -f 'ec_poll.c'; then $(CYGPATH_W) 'ec_poll.c'; else $(CYGPATH_W) '$(srcdir)/ec_poll.c'; fi`

ettercap-ec_profiles.o: ec_profiles.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_profiles.o `test -f 'ec_profiles.c' || echo '$(srcdir)/'`ec_profiles.c

ettercap-ec_profiles.obj: ec_profiles.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_profiles.obj `if test -f 'ec_profiles.c'; then $(CYGPATH_W) 'ec_profiles.c'; else $(CYGPATH_W) '$(srcdir)/ec_profiles.c'; fi`

ettercap-ec_resolv.o: ec_resolv.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_resolv.o `test -f 'ec_resolv.c' || echo '$(srcdir)/'`ec_resolv.c

ettercap-ec_resolv.obj: ec_resolv.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_resolv.obj `if test -f 'ec_resolv.c'; then $(CYGPATH_W) 'ec_resolv.c'; else $(CYGPATH_W) '$(srcdir)/ec_resolv.c'; fi`

ettercap-ec_scan.o: ec_scan.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_scan.o `test -f 'ec_scan.c' || echo '$(srcdir)/'`ec_scan.c

ettercap-ec_scan.obj: ec_scan.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_scan.obj `if test -f 'ec_scan.c'; then $(CYGPATH_W) 'ec_scan.c'; else $(CYGPATH_W) '$(srcdir)/ec_scan.c'; fi`

ettercap-ec_send.o: ec_send.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_send.o `test -f 'ec_send.c' || echo '$(srcdir)/'`ec_send.c

ettercap-ec_send.obj: ec_send.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_send.obj `if test -f 'ec_send.c'; then $(CYGPATH_W) 'ec_send.c'; else $(CYGPATH_W) '$(srcdir)/ec_send.c'; fi`

ettercap-ec_services.o: ec_services.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_services.o `test -f 'ec_services.c' || echo '$(srcdir)/'`ec_services.c

ettercap-ec_services.obj: ec_services.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_services.obj `if test -f 'ec_services.c'; then $(CYGPATH_W) 'ec_services.c'; else $(CYGPATH_W) '$(srcdir)/ec_services.c'; fi`

ettercap-ec_session.o: ec_session.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_session.o `test -f 'ec_session.c' || echo '$(srcdir)/'`ec_session.c

ettercap-ec_session.obj: ec_session.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_session.obj `if test -f 'ec_session.c'; then $(CYGPATH_W) 'ec_session.c'; else $(CYGPATH_W) '$(srcdir)/ec_session.c'; fi`

ettercap-ec_signals.o: ec_signals.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_signals.o `test -f 'ec_signals.c' || echo '$(srcdir)/'`ec_signals.c

ettercap-ec_signals.obj: ec_signals.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_signals.obj `if test -f 'ec_signals.c'; then $(CYGPATH_W) 'ec_signals.c'; else $(CYGPATH_W) '$(srcdir)/ec_signals.c'; fi`

ettercap-ec_socket.o: ec_socket.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_socket.o `test -f 'ec_socket.c' || echo '$(srcdir)/'`ec_socket.c

ettercap-ec_socket.obj: ec_socket.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_socket.obj `if test -f 'ec_socket.c'; then $(CYGPATH_W) 'ec_socket.c'; else $(CYGPATH_W) '$(srcdir)/ec_socket.c'; fi`

ettercap-ec_sniff.o: ec_sniff.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_sniff.o `test -f 'ec_sniff.c' || echo '$(srcdir)/'`ec_sniff.c

ettercap-ec_sniff.obj: ec_sniff.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_sniff.obj `if test -f 'ec_sniff.c'; then $(CYGPATH_W) 'ec_sniff.c'; else $(CYGPATH_W) '$(srcdir)/ec_sniff.c'; fi`

ettercap-ec_sniff_bridge.o: ec_sniff_bridge.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_sniff_bridge.o `test -f 'ec_sniff_bridge.c' || echo '$(srcdir)/'`ec_sniff_bridge.c

ettercap-ec_sniff_bridge.obj: ec_sniff_bridge.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_sniff_bridge.obj `if test -f 'ec_sniff_bridge.c'; then $(CYGPATH_W) 'ec_sniff_bridge.c'; else $(CYGPATH_W) '$(srcdir)/ec_sniff_bridge.c'; fi`

ettercap-ec_sniff_unified.o: ec_sniff_unified.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_sniff_unified.o `test -f 'ec_sniff_unified.c' || echo '$(srcdir)/'`ec_sniff_unified.c

ettercap-ec_sniff_unified.obj: ec_sniff_unified.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_sniff_unified.obj `if test -f 'ec_sniff_unified.c'; then $(CYGPATH_W) 'ec_sniff_unified.c'; else $(CYGPATH_W) '$(srcdir)/ec_sniff_unified.c'; fi`

ettercap-ec_sslwrap.o: ec_sslwrap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_sslwrap.o `test -f 'ec_sslwrap.c' || echo '$(srcdir)/'`ec_sslwrap.c

ettercap-ec_sslwrap.obj: ec_sslwrap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_sslwrap.obj `if test -f 'ec_sslwrap.c'; then $(CYGPATH_W) 'ec_sslwrap.c'; else $(CYGPATH_W) '$(srcdir)/ec_sslwrap.c'; fi`

ettercap-ec_stats.o: ec_stats.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_stats.o `test -f 'ec_stats.c' || echo '$(srcdir)/'`ec_stats.c

ettercap-ec_stats.obj: ec_stats.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_stats.obj `if test -f 'ec_stats.c'; then $(CYGPATH_W) 'ec_stats.c'; else $(CYGPATH_W) '$(srcdir)/ec_stats.c'; fi`

ettercap-ec_streambuf.o: ec_streambuf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_streambuf.o `test -f 'ec_streambuf.c' || echo '$(srcdir)/'`ec_streambuf.c

ettercap-ec_streambuf.obj: ec_streambuf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_streambuf.obj `if test -f 'ec_streambuf.c'; then $(CYGPATH_W) 'ec_streambuf.c'; else $(CYGPATH_W) '$(srcdir)/ec_streambuf.c'; fi`

ettercap-ec_strings.o: ec_strings.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_strings.o `test -f 'ec_strings.c' || echo '$(srcdir)/'`ec_strings.c

ettercap-ec_strings.obj: ec_strings.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_strings.obj `if test -f 'ec_strings.c'; then $(CYGPATH_W) 'ec_strings.c'; else $(CYGPATH_W) '$(srcdir)/ec_strings.c'; fi`

ettercap-ec_threads.o: ec_threads.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_threads.o `test -f 'ec_threads.c' || echo '$(srcdir)/'`ec_threads.c

ettercap-ec_threads.obj: ec_threads.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_threads.obj `if test -f 'ec_threads.c'; then $(CYGPATH_W) 'ec_threads.c'; else $(CYGPATH_W) '$(srcdir)/ec_threads.c'; fi`

ettercap-ec_ui.o: ec_ui.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_ui.o `test -f 'ec_ui.c' || echo '$(srcdir)/'`ec_ui.c

ettercap-ec_ui.obj: ec_ui.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_ui.obj `if test -f 'ec_ui.c'; then $(CYGPATH_W) 'ec_ui.c'; else $(CYGPATH_W) '$(srcdir)/ec_ui.c'; fi`

ettercap-ec_update.o: ec_update.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_update.o `test -f 'ec_update.c' || echo '$(srcdir)/'`ec_update.c

ettercap-ec_update.obj: ec_update.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o ettercap-ec_update.obj `if test -f 'ec_update.c'; then $(CYGPATH_W) 'ec_update.c'; else $(CYGPATH_W) '$(srcdir)/ec_update.c'; fi`

mitm/ettercap-ec_arp_poisoning.o: mitm/ec_arp_poisoning.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o mitm/ettercap-ec_arp_poisoning.o `test -f 'mitm/ec_arp_poisoning.c' || echo '$(srcdir)/'`mitm/ec_arp_poisoning.c

mitm/ettercap-ec_arp_poisoning.obj: mitm/ec_arp_poisoning.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o mitm/ettercap-ec_arp_poisoning.obj `if test -f 'mitm/ec_arp_poisoning.c'; then $(CYGPATH_W) 'mitm/ec_arp_poisoning.c'; else $(CYGPATH_W) '$(srcdir)/mitm/ec_arp_poisoning.c'; fi`

mitm/ettercap-ec_dhcp_spoofing.o: mitm/ec_dhcp_spoofing.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o mitm/ettercap-ec_dhcp_spoofing.o `test -f 'mitm/ec_dhcp_spoofing.c' || echo '$(srcdir)/'`mitm/ec_dhcp_spoofing.c

mitm/ettercap-ec_dhcp_spoofing.obj: mitm/ec_dhcp_spoofing.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o mitm/ettercap-ec_dhcp_spoofing.obj `if test -f 'mitm/ec_dhcp_spoofing.c'; then $(CYGPATH_W) 'mitm/ec_dhcp_spoofing.c'; else $(CYGPATH_W) '$(srcdir)/mitm/ec_dhcp_spoofing.c'; fi`

mitm/ettercap-ec_icmp_redirect.o: mitm/ec_icmp_redirect.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o mitm/ettercap-ec_icmp_redirect.o `test -f 'mitm/ec_icmp_redirect.c' || echo '$(srcdir)/'`mitm/ec_icmp_redirect.c

mitm/ettercap-ec_icmp_redirect.obj: mitm/ec_icmp_redirect.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o mitm/ettercap-ec_icmp_redirect.obj `if test -f 'mitm/ec_icmp_redirect.c'; then $(CYGPATH_W) 'mitm/ec_icmp_redirect.c'; else $(CYGPATH_W) '$(srcdir)/mitm/ec_icmp_redirect.c'; fi`

mitm/ettercap-ec_port_stealing.o: mitm/ec_port_stealing.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o mitm/ettercap-ec_port_stealing.o `test -f 'mitm/ec_port_stealing.c' || echo '$(srcdir)/'`mitm/ec_port_stealing.c

mitm/ettercap-ec_port_stealing.obj: mitm/ec_port_stealing.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o mitm/ettercap-ec_port_stealing.obj `if test -f 'mitm/ec_port_stealing.c'; then $(CYGPATH_W) 'mitm/ec_port_stealing.c'; else $(CYGPATH_W) '$(srcdir)/mitm/ec_port_stealing.c'; fi`

protocols/ettercap-ec_arp.o: protocols/ec_arp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o protocols/ettercap-ec_arp.o `test -f 'protocols/ec_arp.c' || echo '$(srcdir)/'`protocols/ec_arp.c

protocols/ettercap-ec_arp.obj: protocols/ec_arp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o protocols/ettercap-ec_arp.obj `if test -f 'protocols/ec_arp.c'; then $(CYGPATH_W) 'protocols/ec_arp.c'; else $(CYGPATH_W) '$(srcdir)/protocols/ec_arp.c'; fi`

protocols/ettercap-ec_eth.o: protocols/ec_eth.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o protocols/ettercap-ec_eth.o `test -f 'protocols/ec_eth.c' || echo '$(srcdir)/'`protocols/ec_eth.c

protocols/ettercap-ec_eth.obj: protocols/ec_eth.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o protocols/ettercap-ec_eth.obj `if test -f 'protocols/ec_eth.c'; then $(CYGPATH_W) 'protocols/ec_eth.c'; else $(CYGPATH_W) '$(srcdir)/protocols/ec_eth.c'; fi`

protocols/ettercap-ec_fddi.o: protocols/ec_fddi.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o protocols/ettercap-ec_fddi.o `test -f 'protocols/ec_fddi.c' || echo '$(srcdir)/'`protocols/ec_fddi.c

protocols/ettercap-ec_fddi.obj: protocols/ec_fddi.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o protocols/ettercap-ec_fddi.obj `if test -f 'protocols/ec_fddi.c'; then $(CYGPATH_W) 'protocols/ec_fddi.c'; else $(CYGPATH_W) '$(srcdir)/protocols/ec_fddi.c'; fi`

protocols/ettercap-ec_cooked.o: protocols/ec_cooked.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o protocols/ettercap-ec_cooked.o `test -f 'protocols/ec_cooked.c' || echo '$(srcdir)/'`protocols/ec_cooked.c

protocols/ettercap-ec_cooked.obj: protocols/ec_cooked.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o protocols/ettercap-ec_cooked.obj `if test -f 'protocols/ec_cooked.c'; then $(CYGPATH_W) 'protocols/ec_cooked.c'; else $(CYGPATH_W) '$(srcdir)/protocols/ec_cooked.c'; fi`

protocols/ettercap-ec_gre.o: protocols/ec_gre.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o protocols/ettercap-ec_gre.o `test -f 'protocols/ec_gre.c' || echo '$(srcdir)/'`protocols/ec_gre.c

protocols/ettercap-ec_gre.obj: protocols/ec_gre.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o protocols/ettercap-ec_gre.obj `if test -f 'protocols/ec_gre.c'; then $(CYGPATH_W) 'protocols/ec_gre.c'; else $(CYGPATH_W) '$(srcdir)/protocols/ec_gre.c'; fi`

protocols/ettercap-ec_icmp.o: protocols/ec_icmp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o protocols/ettercap-ec_icmp.o `test -f 'protocols/ec_icmp.c' || echo '$(srcdir)/'`protocols/ec_icmp.c

protocols/ettercap-ec_icmp.obj: protocols/ec_icmp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o protocols/ettercap-ec_icmp.obj `if test -f 'protocols/ec_icmp.c'; then $(CYGPATH_W) 'protocols/ec_icmp.c'; else $(CYGPATH_W) '$(srcdir)/protocols/ec_icmp.c'; fi`

protocols/ettercap-ec_ip.o: protocols/ec_ip.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o protocols/ettercap-ec_ip.o `test -f 'protocols/ec_ip.c' || echo '$(srcdir)/'`protocols/ec_ip.c

protocols/ettercap-ec_ip.obj: protocols/ec_ip.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o protocols/ettercap-ec_ip.obj `if test -f 'protocols/ec_ip.c'; then $(CYGPATH_W) 'protocols/ec_ip.c'; else $(CYGPATH_W) '$(srcdir)/protocols/ec_ip.c'; fi`

protocols/ettercap-ec_ip6.o: protocols/ec_ip6.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o protocols/ettercap-ec_ip6.o `test -f 'protocols/ec_ip6.c' || echo '$(srcdir)/'`protocols/ec_ip6.c

protocols/ettercap-ec_ip6.obj: protocols/ec_ip6.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o protocols/ettercap-ec_ip6.obj `if test -f 'protocols/ec_ip6.c'; then $(CYGPATH_W) 'protocols/ec_ip6.c'; else $(CYGPATH_W) '$(srcdir)/protocols/ec_ip6.c'; fi`

protocols/ettercap-ec_ppp.o: protocols/ec_ppp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o protocols/ettercap-ec_ppp.o `test -f 'protocols/ec_ppp.c' || echo '$(srcdir)/'`protocols/ec_ppp.c

protocols/ettercap-ec_ppp.obj: protocols/ec_ppp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o protocols/ettercap-ec_ppp.obj `if test -f 'protocols/ec_ppp.c'; then $(CYGPATH_W) 'protocols/ec_ppp.c'; else $(CYGPATH_W) '$(srcdir)/protocols/ec_ppp.c'; fi`

protocols/ettercap-ec_prism.o: protocols/ec_prism.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o protocols/ettercap-ec_prism.o `test -f 'protocols/ec_prism.c' || echo '$(srcdir)/'`protocols/ec_prism.c

protocols/ettercap-ec_prism.obj: protocols/ec_prism.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o protocols/ettercap-ec_prism.obj `if test -f 'protocols/ec_prism.c'; then $(CYGPATH_W) 'protocols/ec_prism.c'; else $(CYGPATH_W) '$(srcdir)/protocols/ec_prism.c'; fi`

protocols/ettercap-ec_rawip.o: protocols/ec_rawip.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o protocols/ettercap-ec_rawip.o `test -f 'protocols/ec_rawip.c' || echo '$(srcdir)/'`protocols/ec_rawip.c

protocols/ettercap-ec_rawip.obj: protocols/ec_rawip.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o protocols/ettercap-ec_rawip.obj `if test -f 'protocols/ec_rawip.c'; then $(CYGPATH_W) 'protocols/ec_rawip.c'; else $(CYGPATH_W) '$(srcdir)/protocols/ec_rawip.c'; fi`

protocols/ettercap-ec_tcp.o: protocols/ec_tcp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o protocols/ettercap-ec_tcp.o `test -f 'protocols/ec_tcp.c' || echo '$(srcdir)/'`protocols/ec_tcp.c

protocols/ettercap-ec_tcp.obj: protocols/ec_tcp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o protocols/ettercap-ec_tcp.obj `if test -f 'protocols/ec_tcp.c'; then $(CYGPATH_W) 'protocols/ec_tcp.c'; else $(CYGPATH_W) '$(srcdir)/protocols/ec_tcp.c'; fi`

protocols/ettercap-ec_tr.o: protocols/ec_tr.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o protocols/ettercap-ec_tr.o `test -f 'protocols/ec_tr.c' || echo '$(srcdir)/'`protocols/ec_tr.c

protocols/ettercap-ec_tr.obj: protocols/ec_tr.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o protocols/ettercap-ec_tr.obj `if test -f 'protocols/ec_tr.c'; then $(CYGPATH_W) 'protocols/ec_tr.c'; else $(CYGPATH_W) '$(srcdir)/protocols/ec_tr.c'; fi`

protocols/ettercap-ec_vlan.o: protocols/ec_vlan.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o protocols/ettercap-ec_vlan.o `test -f 'protocols/ec_vlan.c' || echo '$(srcdir)/'`protocols/ec_vlan.c

protocols/ettercap-ec_vlan.obj: protocols/ec_vlan.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o protocols/ettercap-ec_vlan.obj `if test -f 'protocols/ec_vlan.c'; then $(CYGPATH_W) 'protocols/ec_vlan.c'; else $(CYGPATH_W) '$(srcdir)/protocols/ec_vlan.c'; fi`

protocols/ettercap-ec_udp.o: protocols/ec_udp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o protocols/ettercap-ec_udp.o `test -f 'protocols/ec_udp.c' || echo '$(srcdir)/'`protocols/ec_udp.c

protocols/ettercap-ec_udp.obj: protocols/ec_udp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o protocols/ettercap-ec_udp.obj `if test -f 'protocols/ec_udp.c'; then $(CYGPATH_W) 'protocols/ec_udp.c'; else $(CYGPATH_W) '$(srcdir)/protocols/ec_udp.c'; fi`

protocols/ettercap-ec_wifi.o: protocols/ec_wifi.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o protocols/ettercap-ec_wifi.o `test -f 'protocols/ec_wifi.c' || echo '$(srcdir)/'`protocols/ec_wifi.c

protocols/ettercap-ec_wifi.obj: protocols/ec_wifi.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o protocols/ettercap-ec_wifi.obj `if test -f 'protocols/ec_wifi.c'; then $(CYGPATH_W) 'protocols/ec_wifi.c'; else $(CYGPATH_W) '$(srcdir)/protocols/ec_wifi.c'; fi`

dissectors/ettercap-ec_bgp.o: dissectors/ec_bgp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_bgp.o `test -f 'dissectors/ec_bgp.c' || echo '$(srcdir)/'`dissectors/ec_bgp.c

dissectors/ettercap-ec_bgp.obj: dissectors/ec_bgp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_bgp.obj `if test -f 'dissectors/ec_bgp.c'; then $(CYGPATH_W) 'dissectors/ec_bgp.c'; else $(CYGPATH_W) '$(srcdir)/dissectors/ec_bgp.c'; fi`

dissectors/ettercap-ec_cvs.o: dissectors/ec_cvs.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_cvs.o `test -f 'dissectors/ec_cvs.c' || echo '$(srcdir)/'`dissectors/ec_cvs.c

dissectors/ettercap-ec_cvs.obj: dissectors/ec_cvs.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_cvs.obj `if test -f 'dissectors/ec_cvs.c'; then $(CYGPATH_W) 'dissectors/ec_cvs.c'; else $(CYGPATH_W) '$(srcdir)/dissectors/ec_cvs.c'; fi`

dissectors/ettercap-ec_dhcp.o: dissectors/ec_dhcp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_dhcp.o `test -f 'dissectors/ec_dhcp.c' || echo '$(srcdir)/'`dissectors/ec_dhcp.c

dissectors/ettercap-ec_dhcp.obj: dissectors/ec_dhcp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_dhcp.obj `if test -f 'dissectors/ec_dhcp.c'; then $(CYGPATH_W) 'dissectors/ec_dhcp.c'; else $(CYGPATH_W) '$(srcdir)/dissectors/ec_dhcp.c'; fi`

dissectors/ettercap-ec_dns.o: dissectors/ec_dns.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_dns.o `test -f 'dissectors/ec_dns.c' || echo '$(srcdir)/'`dissectors/ec_dns.c

dissectors/ettercap-ec_dns.obj: dissectors/ec_dns.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_dns.obj `if test -f 'dissectors/ec_dns.c'; then $(CYGPATH_W) 'dissectors/ec_dns.c'; else $(CYGPATH_W) '$(srcdir)/dissectors/ec_dns.c'; fi`

dissectors/ettercap-ec_ftp.o: dissectors/ec_ftp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_ftp.o `test -f 'dissectors/ec_ftp.c' || echo '$(srcdir)/'`dissectors/ec_ftp.c

dissectors/ettercap-ec_ftp.obj: dissectors/ec_ftp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_ftp.obj `if test -f 'dissectors/ec_ftp.c'; then $(CYGPATH_W) 'dissectors/ec_ftp.c'; else $(CYGPATH_W) '$(srcdir)/dissectors/ec_ftp.c'; fi`

dissectors/ettercap-ec_http.o: dissectors/ec_http.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_http.o `test -f 'dissectors/ec_http.c' || echo '$(srcdir)/'`dissectors/ec_http.c

dissectors/ettercap-ec_http.obj: dissectors/ec_http.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_http.obj `if test -f 'dissectors/ec_http.c'; then $(CYGPATH_W) 'dissectors/ec_http.c'; else $(CYGPATH_W) '$(srcdir)/dissectors/ec_http.c'; fi`

dissectors/ettercap-ec_imap.o: dissectors/ec_imap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_imap.o `test -f 'dissectors/ec_imap.c' || echo '$(srcdir)/'`dissectors/ec_imap.c

dissectors/ettercap-ec_imap.obj: dissectors/ec_imap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_imap.obj `if test -f 'dissectors/ec_imap.c'; then $(CYGPATH_W) 'dissectors/ec_imap.c'; else $(CYGPATH_W) '$(srcdir)/dissectors/ec_imap.c'; fi`

dissectors/ettercap-ec_icq.o: dissectors/ec_icq.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_icq.o `test -f 'dissectors/ec_icq.c' || echo '$(srcdir)/'`dissectors/ec_icq.c

dissectors/ettercap-ec_icq.obj: dissectors/ec_icq.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_icq.obj `if test -f 'dissectors/ec_icq.c'; then $(CYGPATH_W) 'dissectors/ec_icq.c'; else $(CYGPATH_W) '$(srcdir)/dissectors/ec_icq.c'; fi`

dissectors/ettercap-ec_irc.o: dissectors/ec_irc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_irc.o `test -f 'dissectors/ec_irc.c' || echo '$(srcdir)/'`dissectors/ec_irc.c

dissectors/ettercap-ec_irc.obj: dissectors/ec_irc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_irc.obj `if test -f 'dissectors/ec_irc.c'; then $(CYGPATH_W) 'dissectors/ec_irc.c'; else $(CYGPATH_W) '$(srcdir)/dissectors/ec_irc.c'; fi`

dissectors/ettercap-ec_ldap.o: dissectors/ec_ldap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_ldap.o `test -f 'dissectors/ec_ldap.c' || echo '$(srcdir)/'`dissectors/ec_ldap.c

dissectors/ettercap-ec_ldap.obj: dissectors/ec_ldap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_ldap.obj `if test -f 'dissectors/ec_ldap.c'; then $(CYGPATH_W) 'dissectors/ec_ldap.c'; else $(CYGPATH_W) '$(srcdir)/dissectors/ec_ldap.c'; fi`

dissectors/ettercap-ec_mountd.o: dissectors/ec_mountd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_mountd.o `test -f 'dissectors/ec_mountd.c' || echo '$(srcdir)/'`dissectors/ec_mountd.c

dissectors/ettercap-ec_mountd.obj: dissectors/ec_mountd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_mountd.obj `if test -f 'dissectors/ec_mountd.c'; then $(CYGPATH_W) 'dissectors/ec_mountd.c'; else $(CYGPATH_W) '$(srcdir)/dissectors/ec_mountd.c'; fi`

dissectors/ettercap-ec_msn.o: dissectors/ec_msn.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_msn.o `test -f 'dissectors/ec_msn.c' || echo '$(srcdir)/'`dissectors/ec_msn.c

dissectors/ettercap-ec_msn.obj: dissectors/ec_msn.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_msn.obj `if test -f 'dissectors/ec_msn.c'; then $(CYGPATH_W) 'dissectors/ec_msn.c'; else $(CYGPATH_W) '$(srcdir)/dissectors/ec_msn.c'; fi`

dissectors/ettercap-ec_mysql.o: dissectors/ec_mysql.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_mysql.o `test -f 'dissectors/ec_mysql.c' || echo '$(srcdir)/'`dissectors/ec_mysql.c

dissectors/ettercap-ec_mysql.obj: dissectors/ec_mysql.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_mysql.obj `if test -f 'dissectors/ec_mysql.c'; then $(CYGPATH_W) 'dissectors/ec_mysql.c'; else $(CYGPATH_W) '$(srcdir)/dissectors/ec_mysql.c'; fi`

dissectors/ettercap-ec_napster.o: dissectors/ec_napster.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_napster.o `test -f 'dissectors/ec_napster.c' || echo '$(srcdir)/'`dissectors/ec_napster.c

dissectors/ettercap-ec_napster.obj: dissectors/ec_napster.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_napster.obj `if test -f 'dissectors/ec_napster.c'; then $(CYGPATH_W) 'dissectors/ec_napster.c'; else $(CYGPATH_W) '$(srcdir)/dissectors/ec_napster.c'; fi`

dissectors/ettercap-ec_nntp.o: dissectors/ec_nntp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_nntp.o `test -f 'dissectors/ec_nntp.c' || echo '$(srcdir)/'`dissectors/ec_nntp.c

dissectors/ettercap-ec_nntp.obj: dissectors/ec_nntp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_nntp.obj `if test -f 'dissectors/ec_nntp.c'; then $(CYGPATH_W) 'dissectors/ec_nntp.c'; else $(CYGPATH_W) '$(srcdir)/dissectors/ec_nntp.c'; fi`

dissectors/ettercap-ec_ospf.o: dissectors/ec_ospf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_ospf.o `test -f 'dissectors/ec_ospf.c' || echo '$(srcdir)/'`dissectors/ec_ospf.c

dissectors/ettercap-ec_ospf.obj: dissectors/ec_ospf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_ospf.obj `if test -f 'dissectors/ec_ospf.c'; then $(CYGPATH_W) 'dissectors/ec_ospf.c'; else $(CYGPATH_W) '$(srcdir)/dissectors/ec_ospf.c'; fi`

dissectors/ettercap-ec_pop.o: dissectors/ec_pop.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_pop.o `test -f 'dissectors/ec_pop.c' || echo '$(srcdir)/'`dissectors/ec_pop.c

dissectors/ettercap-ec_pop.obj: dissectors/ec_pop.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_pop.obj `if test -f 'dissectors/ec_pop.c'; then $(CYGPATH_W) 'dissectors/ec_pop.c'; else $(CYGPATH_W) '$(srcdir)/dissectors/ec_pop.c'; fi`

dissectors/ettercap-ec_portmap.o: dissectors/ec_portmap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_portmap.o `test -f 'dissectors/ec_portmap.c' || echo '$(srcdir)/'`dissectors/ec_portmap.c

dissectors/ettercap-ec_portmap.obj: dissectors/ec_portmap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_portmap.obj `if test -f 'dissectors/ec_portmap.c'; then $(CYGPATH_W) 'dissectors/ec_portmap.c'; else $(CYGPATH_W) '$(srcdir)/dissectors/ec_portmap.c'; fi`

dissectors/ettercap-ec_radius.o: dissectors/ec_radius.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_radius.o `test -f 'dissectors/ec_radius.c' || echo '$(srcdir)/'`dissectors/ec_radius.c

dissectors/ettercap-ec_radius.obj: dissectors/ec_radius.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_radius.obj `if test -f 'dissectors/ec_radius.c'; then $(CYGPATH_W) 'dissectors/ec_radius.c'; else $(CYGPATH_W) '$(srcdir)/dissectors/ec_radius.c'; fi`

dissectors/ettercap-ec_rcon.o: dissectors/ec_rcon.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_rcon.o `test -f 'dissectors/ec_rcon.c' || echo '$(srcdir)/'`dissectors/ec_rcon.c

dissectors/ettercap-ec_rcon.obj: dissectors/ec_rcon.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_rcon.obj `if test -f 'dissectors/ec_rcon.c'; then $(CYGPATH_W) 'dissectors/ec_rcon.c'; else $(CYGPATH_W) '$(srcdir)/dissectors/ec_rcon.c'; fi`

dissectors/ettercap-ec_rip.o: dissectors/ec_rip.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_rip.o `test -f 'dissectors/ec_rip.c' || echo '$(srcdir)/'`dissectors/ec_rip.c

dissectors/ettercap-ec_rip.obj: dissectors/ec_rip.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_rip.obj `if test -f 'dissectors/ec_rip.c'; then $(CYGPATH_W) 'dissectors/ec_rip.c'; else $(CYGPATH_W) '$(srcdir)/dissectors/ec_rip.c'; fi`

dissectors/ettercap-ec_rlogin.o: dissectors/ec_rlogin.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_rlogin.o `test -f 'dissectors/ec_rlogin.c' || echo '$(srcdir)/'`dissectors/ec_rlogin.c

dissectors/ettercap-ec_rlogin.obj: dissectors/ec_rlogin.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_rlogin.obj `if test -f 'dissectors/ec_rlogin.c'; then $(CYGPATH_W) 'dissectors/ec_rlogin.c'; else $(CYGPATH_W) '$(srcdir)/dissectors/ec_rlogin.c'; fi`

dissectors/ettercap-ec_smb.o: dissectors/ec_smb.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_smb.o `test -f 'dissectors/ec_smb.c' || echo '$(srcdir)/'`dissectors/ec_smb.c

dissectors/ettercap-ec_smb.obj: dissectors/ec_smb.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_smb.obj `if test -f 'dissectors/ec_smb.c'; then $(CYGPATH_W) 'dissectors/ec_smb.c'; else $(CYGPATH_W) '$(srcdir)/dissectors/ec_smb.c'; fi`

dissectors/ettercap-ec_smtp.o: dissectors/ec_smtp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_smtp.o `test -f 'dissectors/ec_smtp.c' || echo '$(srcdir)/'`dissectors/ec_smtp.c

dissectors/ettercap-ec_smtp.obj: dissectors/ec_smtp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_smtp.obj `if test -f 'dissectors/ec_smtp.c'; then $(CYGPATH_W) 'dissectors/ec_smtp.c'; else $(CYGPATH_W) '$(srcdir)/dissectors/ec_smtp.c'; fi`

dissectors/ettercap-ec_snmp.o: dissectors/ec_snmp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_snmp.o `test -f 'dissectors/ec_snmp.c' || echo '$(srcdir)/'`dissectors/ec_snmp.c

dissectors/ettercap-ec_snmp.obj: dissectors/ec_snmp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_snmp.obj `if test -f 'dissectors/ec_snmp.c'; then $(CYGPATH_W) 'dissectors/ec_snmp.c'; else $(CYGPATH_W) '$(srcdir)/dissectors/ec_snmp.c'; fi`

dissectors/ettercap-ec_ssh.o: dissectors/ec_ssh.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_ssh.o `test -f 'dissectors/ec_ssh.c' || echo '$(srcdir)/'`dissectors/ec_ssh.c

dissectors/ettercap-ec_ssh.obj: dissectors/ec_ssh.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_ssh.obj `if test -f 'dissectors/ec_ssh.c'; then $(CYGPATH_W) 'dissectors/ec_ssh.c'; else $(CYGPATH_W) '$(srcdir)/dissectors/ec_ssh.c'; fi`

dissectors/ettercap-ec_socks.o: dissectors/ec_socks.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_socks.o `test -f 'dissectors/ec_socks.c' || echo '$(srcdir)/'`dissectors/ec_socks.c

dissectors/ettercap-ec_socks.obj: dissectors/ec_socks.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_socks.obj `if test -f 'dissectors/ec_socks.c'; then $(CYGPATH_W) 'dissectors/ec_socks.c'; else $(CYGPATH_W) '$(srcdir)/dissectors/ec_socks.c'; fi`

dissectors/ettercap-ec_telnet.o: dissectors/ec_telnet.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_telnet.o `test -f 'dissectors/ec_telnet.c' || echo '$(srcdir)/'`dissectors/ec_telnet.c

dissectors/ettercap-ec_telnet.obj: dissectors/ec_telnet.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_telnet.obj `if test -f 'dissectors/ec_telnet.c'; then $(CYGPATH_W) 'dissectors/ec_telnet.c'; else $(CYGPATH_W) '$(srcdir)/dissectors/ec_telnet.c'; fi`

dissectors/ettercap-ec_vnc.o: dissectors/ec_vnc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_vnc.o `test -f 'dissectors/ec_vnc.c' || echo '$(srcdir)/'`dissectors/ec_vnc.c

dissectors/ettercap-ec_vnc.obj: dissectors/ec_vnc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_vnc.obj `if test -f 'dissectors/ec_vnc.c'; then $(CYGPATH_W) 'dissectors/ec_vnc.c'; else $(CYGPATH_W) '$(srcdir)/dissectors/ec_vnc.c'; fi`

dissectors/ettercap-ec_vrrp.o: dissectors/ec_vrrp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_vrrp.o `test -f 'dissectors/ec_vrrp.c' || echo '$(srcdir)/'`dissectors/ec_vrrp.c

dissectors/ettercap-ec_vrrp.obj: dissectors/ec_vrrp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_vrrp.obj `if test -f 'dissectors/ec_vrrp.c'; then $(CYGPATH_W) 'dissectors/ec_vrrp.c'; else $(CYGPATH_W) '$(srcdir)/dissectors/ec_vrrp.c'; fi`

dissectors/ettercap-ec_x11.o: dissectors/ec_x11.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_x11.o `test -f 'dissectors/ec_x11.c' || echo '$(srcdir)/'`dissectors/ec_x11.c

dissectors/ettercap-ec_x11.obj: dissectors/ec_x11.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_x11.obj `if test -f 'dissectors/ec_x11.c'; then $(CYGPATH_W) 'dissectors/ec_x11.c'; else $(CYGPATH_W) '$(srcdir)/dissectors/ec_x11.c'; fi`

dissectors/ettercap-ec_ymsg.o: dissectors/ec_ymsg.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_ymsg.o `test -f 'dissectors/ec_ymsg.c' || echo '$(srcdir)/'`dissectors/ec_ymsg.c

dissectors/ettercap-ec_ymsg.obj: dissectors/ec_ymsg.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ettercap_CFLAGS) $(CFLAGS) -c -o dissectors/ettercap-ec_ymsg.obj `if test -f 'dissectors/ec_ymsg.c'; then $(CYGPATH_W) 'dissectors/ec_ymsg.c'; else $(CYGPATH_W) '$(srcdir)/dissectors/ec_ymsg.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(LIBOBJS)" || rm -f $(LIBOBJS)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f dissectors/$(am__dirstamp)
	-rm -f mitm/$(am__dirstamp)
	-rm -f protocols/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) ctags-recursive \
	install-am install-strip tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS


missing/strlcat.o:
	$(COMPILE) @EC_LIBS@ -c missing/strlcat.c -o missing/strlcat.o

missing/strlcpy.o:
	$(COMPILE) @EC_LIBS@ -c missing/strlcpy.c -o missing/strlcpy.o

missing/strsep.o:
	$(COMPILE) @EC_LIBS@ -c missing/strsep.c -o missing/strsep.o

missing/strcasestr.o:
	$(COMPILE) @EC_LIBS@ -c missing/strcasestr.c -o missing/strcasestr.o

missing/scandir.o:
	$(COMPILE) @EC_LIBS@ -c missing/scandir.c -o missing/scandir.o

missing/memmem.o:
	$(COMPILE) @EC_LIBS@ -c missing/memmem.c -o missing/memmem.o

missing/memcmp.o:
	$(COMPILE) @EC_LIBS@ -c missing/memcmp.c -o missing/memcmp.o

missing/basename.o:
	$(COMPILE) @EC_LIBS@ -c missing/basename.c -o missing/basename.o

missing/getopt.o:
	$(COMPILE) @EC_LIBS@ -c missing/getopt.c -o missing/getopt.o

missing/getopt_long.o:
	$(COMPILE) @EC_LIBS@ -c missing/getopt_long.c -o missing/getopt_long.o

# vim:ts=4:noexpandtab

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
